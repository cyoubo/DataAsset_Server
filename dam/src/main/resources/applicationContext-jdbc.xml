<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<context:property-placeholder location="classpath*:jdbc.properties" ignore-unresolvable="true"/>
	
	<bean id = "pooldataSource" class = "com.alibaba.druid.pool.DruidDataSource"> 
		<property name="url" value = "jdbc:postgresql://${jdbc.url}:5432/DataAssetManage"></property>
		<property name="driverClassName" value = "org.postgresql.Driver"></property>
		<property name="password" value = "${jdbc.password}"></property>
		<property name="username" value = "${jdbc.username}"></property>
	</bean>
	
	<!-- mybatis 相关配置 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="pooldataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <property name="mapperLocations">
       		<list>
                <value>classpath*:com/geoq/dam/**/mapper/*.xml</value>
            </list>
        </property>
    </bean>
 
 	<!-- mybatis session配置 -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory" />
	</bean>
	
	<!-- mapper批量扫描包，从mapper包中扫描出mapper接口，自动创建代理对象并且在spring容器中注册 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
	    <property name="basePackage" value="com.geoq.dam.user.entry" />
	    <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
	</bean>

</beans>